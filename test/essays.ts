export interface Essay {
  title: string;
  text: string;
}

export const essays: Essay[] = [
  {
    title: "The Trouble with the Segway",
    text: "July 2009\n\nThe Segway hasn't delivered on its initial promise, to put it mildly.\nThere are several reasons why, but one is that people don't want\nto be seen riding them. Someone riding a Segway looks like a dork.\n\nMy friend Trevor Blackwell built \nhis own Segway, \nwhich we called\nthe Segwell. He also built a one-wheeled version, \nthe Eunicycle,\nwhich looks exactly like a regular unicycle till you realize the\nrider isn't pedaling.  He has ridden them both to downtown Mountain\nView to get coffee.  When he rides the Eunicycle, people smile at\nhim.  But when he rides the Segwell, they shout abuse from their\ncars: \"Too lazy to walk, ya fuckin homo?\"\n\nWhy do Segways provoke this reaction?  The reason you look like a\ndork riding a Segway is that you look smug.  You don't seem to\nbe working hard enough.\n\nSomeone riding a motorcycle isn't working any harder. But because\nhe's sitting astride it, he seems to be making an effort.  When\nyou're riding a Segway you're just standing there.  And someone who's\nbeing whisked along while seeming to do no work — someone in a sedan\nchair, for example — can't help but look smug.\n\nTry this thought experiment and it becomes clear: imagine something\nthat worked like the Segway, but that you rode with one foot in\nfront of the other, like a skateboard.  That wouldn't seem nearly\nas uncool.\n\nSo there may be a way to capture more of the market Segway hoped\nto reach: make a version that doesn't look so easy for the rider.\nIt would also be helpful if the styling was in the tradition of\nskateboards or bicycles rather than medical devices.\n\nCuriously enough, what got Segway into this problem was that the\ncompany was itself a kind of Segway.  It was too easy for them;\nthey were too successful raising money.  If they'd had to grow the\ncompany gradually, by iterating through several versions they sold\nto real users, they'd have learned pretty quickly that people looked\nstupid riding them. Instead they had enough to work in secret.  They\nhad focus groups aplenty, I'm sure, but they didn't have the people\nyelling insults out of cars.  So they never realized they were\nzooming confidently down a blind alley.\n\n\n\n",
  },
  {
    title: "Ramen Profitable",
    text: "\n\nWant to start a startup?  Get funded by\nY Combinator.\n\n\n\n\n\nJuly 2009\n\nNow that the term \"ramen profitable\" has become widespread, I ought\nto explain precisely what the idea entails.\n\nRamen profitable means a startup makes just enough to pay the\nfounders' living expenses.  This is a different form of profitability\nthan startups have traditionally aimed for.  Traditional profitability\nmeans a big bet is finally paying off, whereas the main importance\nof ramen profitability is that it buys you time.\n[1]\n\nIn the past, a startup would usually become profitable only\nafter raising and spending quite a lot of money.  A company making\ncomputer hardware might not become profitable for 5 years, during\nwhich they spent $50 million.  But when they did\nthey might have revenues of $50 million a year.   This kind of\nprofitability means the startup has succeeded.\n\nRamen profitability is the other extreme: a startup that becomes\nprofitable after 2 months, even though its revenues are only $3000\na month, because the only employees are a couple 25 year old founders\nwho can live on practically nothing.  Revenues of $3000 a month do\nnot mean the company has succeeded.\nBut it does share something with the one\nthat's profitable in the traditional way: they don't need to raise\nmoney to survive.\n\nRamen profitability is an unfamiliar idea to most people because\nit only recently became feasible.  It's still not feasible for a\nlot of startups; it would not be for most biotech startups, for\nexample; but it is for many software startups because they're now\nso cheap.  For many, the only real cost is the founders'\nliving expenses.\n\nThe main significance of this type of profitability is that you're\nno longer at the mercy of investors.  If you're still losing money,\nthen eventually you'll either have to raise more\nor shut down.  Once you're\nramen profitable this painful choice goes away.\nYou can still raise money, but you don't have to do it now.\n\n* * *\n\nThe most obvious advantage of not needing money is that\nyou can get better terms.  If investors know you need money, they'll\nsometimes take advantage of you.  Some may even deliberately\nstall, because they know that as you run out of money you'll become\nincreasingly pliable.\n\nBut there are also three less obvious advantages of ramen profitability.\nOne is that it makes you more attractive to investors.  If you're\nalready profitable, on however small a scale, it shows that (a) you\ncan get at least someone to pay you, (b) you're serious about\nbuilding things people want, and (c) you're disciplined enough to\nkeep expenses low.\n\nThis is reassuring to investors, because you've addressed three of\ntheir biggest worries.  It's common for them to fund companies that\nhave smart founders and a big market, and yet still fail.  When\nthese companies fail, it's usually because (a) people wouldn't pay\nfor what they made, e.g. because it was too hard to sell to them,\nor the market wasn't ready yet, (b) the founders solved the wrong\nproblem, instead of paying attention to what users needed, or (c)\nthe company spent too much and burned through their funding before\nthey started to make money.  If you're ramen profitable, you're\nalready avoiding these mistakes.\n\nAnother advantage of ramen profitability is that it's good for\nmorale.  A company\ntends to feel rather theoretical when you first start it.  It's\nlegally a company, but you feel like you're lying when you call it\none.  When people start to pay you significant amounts, the company\nstarts to feel real.  And your own living expenses are the milestone\nyou feel most, because at that point the future flips state.  Now\nsurvival is the default, instead of dying.\n\nA morale boost on that scale is very valuable in a startup, because\nthe moral weight of running a startup is what makes it hard.  Startups\nare still very rare.  Why don't more people do it?  The financial\nrisk?  Plenty of 25 year olds save nothing anyway.  The long hours?\nPlenty of people work just as long hours in regular jobs. What keeps\npeople from starting startups is the fear of having so much\nresponsibility.  And this is not an irrational fear: it really is\nhard to bear.  Anything that takes some of that weight off you will \ngreatly increase your chances of surviving.\n\nA startup that reaches ramen profitability may be more likely\nto succeed than not.  Which is pretty exciting, considering the\nbimodal distribution of outcomes in startups: you either fail or\nmake a lot of money.\n\nThe fourth advantage of ramen profitability is the least obvious\nbut may be the most important.  If you don't need to raise money,\nyou don't have to interrupt working on the company to do it.\n\nRaising money is terribly distracting.  \nYou're lucky if your\nproductivity is a third of what it was before.  And it can last for\nmonths.\n\nI didn't understand (or rather, remember) precisely why raising\nmoney was so distracting till earlier this year.  I'd noticed that\nstartups we funded would usually grind to a halt when they switched\nto raising money, but I didn't remember exactly why till YC raised\nmoney itself.  We had a comparatively easy time of it; the first\npeople I asked said yes; but it took months to work out the\ndetails, and during that time I got hardly any real work done.  Why?\nBecause I thought about it all the time.\n\nAt any given time there tends to be one problem that's the most\nurgent for a startup.  This is what you think about as you fall\nasleep at night and when you take a shower in the morning.  And\nwhen you start raising money, that becomes the problem you think\nabout.  You only take one shower in the morning, and if you're\nthinking about investors during it, then you're not thinking about\nthe product.\n\nWhereas if you can choose when you raise money, you can pick a time\nwhen you're not in the middle of something else, and you can probably\nalso insist that the round close fast.  You may even be able to\navoid having the round occupy your thoughts, if you don't care\nwhether it closes.\n\n* * *\n\nRamen profitable means no more than the definition implies.  It\ndoes not, for example, imply that you're \"bootstrapping\" the\nstartup—that you're never going to take money from investors.\nEmpirically that doesn't seem to work very well.  Few startups\nsucceed without taking investment.  Maybe as startups get cheaper\nit will become more common.  On the other hand, the money is there,\nwaiting to be invested.  If startups need it less, they'll be able\nto get it on better terms, which will make them more inclined to\ntake it.  That will tend to produce an equilibrium.\n[2]\n\nAnother thing ramen profitability doesn't imply is Joe Kraus's idea\nthat you should put your \nbusiness model in beta when you put your\nproduct in beta.  He believes you should get\npeople to pay you from the beginning.  I think that's too constraining.\nFacebook didn't, and they've done better than most startups.  Making\nmoney right away was not only unnecessary for them, but probably\nwould have been harmful.  I do think Joe's rule could be useful for\nmany startups, though.  When founders seem unfocused, I sometimes\nsuggest they try to get customers to pay them for something, in the\nhope that this constraint will prod them into action.\n\nThe difference between Joe's idea and ramen profitability is that\na ramen profitable company doesn't have to be making money the way\nit ultimately will.  It just has to be making money.  The most\nfamous example is Google, which initially made money by licensing\nsearch to sites like Yahoo.\n\nIs there a downside to ramen profitability?  Probably the biggest\ndanger is that it might turn you into a consulting firm.  Startups\nhave to be product companies, in the sense of making a single thing\nthat everyone uses.  The defining quality of startups is that they\ngrow fast, and consulting just can't scale the way a product can.\n[3]\nBut it's pretty easy to make $3000 a month consulting; in\nfact, that would be a low rate for contract programming.  So there\ncould be a temptation to slide into consulting, and telling\nyourselves you're a ramen profitable startup, when in fact\nyou're not a startup at all.\n\nIt's ok to do a little consulting-type work at first.  Startups\nusually have to do something weird at first.  But remember\nthat ramen profitability is not the destination.  A startup's\ndestination is to grow really big; ramen profitability is a trick\nfor not dying en route.\n\n\n\n\n\nNotes\n\n[1]\nThe \"ramen\" in \"ramen profitable\" refers to instant ramen,\nwhich is just about the cheapest food available.\n\nPlease do not take the term literally.  Living on instant ramen\nwould be very unhealthy.  Rice and beans are a better source of\nfood.  Start by investing in a rice cooker, if you don't have one.\n\nRice and Beans for 2n\n  olive oil or butter\n  n yellow onions\n  other fresh vegetables; experiment\n  3n cloves garlic\n  n 12-oz cans white, kidney, or black beans\n  n cubes Knorr beef or vegetable bouillon\n  n teaspoons freshly ground black pepper\n  3n teaspoons ground cumin\n  n cups dry rice, preferably brown\n\nPut rice in rice cooker. Add water as specified on rice package.\n(Default: 2 cups water per cup of rice.) Turn on rice cooker and\nforget about it.\n\nChop onions and other vegetables and fry in oil, over fairly low\nheat, till onions are glassy. Put in chopped garlic, pepper, cumin,\nand a little more fat, and stir.  Keep heat low. Cook another 2 or\n3 minutes, then add beans (don't drain the beans), and stir. Throw\nin the bouillon cube(s), cover, and cook on lowish heat for at least\n10 minutes more. Stir vigilantly to avoid sticking.\n\nIf you want to save money, buy beans in giant cans from discount\nstores.  Spices are also much cheaper when bought in bulk.\nIf there's an Indian grocery store near you, they'll have big \nbags of cumin for the same price as the little jars in supermarkets.\n\n[2]\nThere's a good chance that a shift in power from investors\nto founders would actually increase the size of the venture business.\nI think investors currently err too far on the side of being harsh\nto founders.  If they were forced to stop, the whole venture business\nwould work better, and you might see something like the increase\nin trade you always see when restrictive laws are removed.\n\nInvestors\nare one of the biggest sources of pain for founders; if they stopped\ncausing so much pain, it would be better to be a founder; and if\nit were better to be a founder, more people would do it.\n\n[3]\nIt's conceivable that a startup could grow big by transforming\nconsulting into a form that would scale.  But if they did that\nthey'd really be a product company.\n\nThanks to Jessica Livingston for reading drafts of this.\n\n\nWant to start a startup?  Get funded by\nY Combinator.\n[1]1[2]2[3]3123Japanese Translation\n\n\n\n",
  },
  {
    title: "Maker's Schedule, Manager's Schedule ",
    text: "\n\n\n\n\n\"...the mere consciousness of an engagement will sometimes worry a whole day.\"\n\n� Charles Dickens\n\n\n\n\n\"...the mere consciousness of an engagement will sometimes worry a whole day.\"\n\n� Charles Dickens\n\nJuly 2009\n\nOne reason programmers dislike meetings so much is that they're on\na different type of schedule from other people.  Meetings cost them\nmore.\n\nThere are two types of schedule, which I'll call the manager's\nschedule and the maker's schedule.  The manager's schedule is for\nbosses.  It's embodied in the traditional appointment book, with\neach day cut into one hour intervals.  You can block off several\nhours for a single task if you need to, but by default you change\nwhat you're doing every hour.\n\nWhen you use time that way, it's merely a practical problem to meet\nwith someone.  Find an open slot in your schedule, book them, and\nyou're done.\n\nMost powerful people are on the manager's schedule.  It's the\nschedule of command.  But there's another way of using time that's\ncommon among people who make things, like programmers and writers.\nThey generally prefer to use time in units of half a day at least.\nYou can't write or program well in units of an hour.  That's barely\nenough time to get started.\n\nWhen you're operating on the maker's schedule, meetings are a\ndisaster.  A single meeting can blow a whole afternoon, by breaking\nit into two pieces each too small to do anything hard in.  Plus you\nhave to remember to go to the meeting.  That's no problem for someone\non the manager's schedule.  There's always something coming on the\nnext hour; the only question is what.  But when someone on the\nmaker's schedule has a meeting, they have to think about it.\n\nFor someone on the maker's schedule, having a meeting is like\nthrowing an exception.  It doesn't merely cause you to switch from\none task to another; it changes the mode in which you work.\n\nI find one meeting can sometimes affect a whole day.   A meeting\ncommonly blows at least half a day, by breaking up a morning or\nafternoon.  But in addition there's sometimes a cascading effect.\nIf I know the afternoon is going to be broken up, I'm slightly less\nlikely to start something ambitious in the morning.  I know this\nmay sound oversensitive, but if you're a maker, think of your own\ncase.  Don't your spirits rise at the thought of having an entire\nday free to work, with no appointments at all?  Well, that means\nyour spirits are correspondingly depressed when you don't.  And\nambitious projects are by definition close to the limits of your\ncapacity.  A small decrease in morale is enough to kill them off.\n\nEach type of schedule works fine by itself.  Problems arise when\nthey meet.  Since most powerful people operate on the manager's\nschedule, they're in a position to make everyone resonate at their\nfrequency if they want to.  But the smarter ones restrain themselves,\nif they know that some of the people working for them need long\nchunks of time to work in.\n\nOur case is an unusual one.  Nearly all investors, including all\nVCs I know, operate on the manager's schedule.  But \nY Combinator\nruns on the maker's schedule.  Rtm and Trevor and I do because we\nalways have, and Jessica does too, mostly, because she's gotten\ninto sync with us.\n\nI wouldn't be surprised if there start to be more companies like\nus.  I suspect founders may increasingly be able to resist, or at\nleast postpone, turning into managers, just as a few decades ago\nthey started to be able to resist switching from jeans\nto suits.\n\nHow do we manage to advise so many startups on the maker's schedule?\nBy using the classic device for simulating the manager's schedule\nwithin the maker's: office hours.  Several times a week I set aside\na chunk of time to meet founders we've funded.  These chunks of\ntime are at the end of my working day, and I wrote a signup program\nthat ensures all the appointments within a given set of office hours\nare clustered at the end.  Because they come at the end of my day\nthese meetings are never an interruption.  (Unless their working\nday ends at the same time as mine, the meeting presumably interrupts\ntheirs, but since they made the appointment it must be worth it to\nthem.)  During busy periods, office hours sometimes get long enough\nthat they compress the day, but they never interrupt it.\n\n\nWhen we were working on our own startup, back in the 90s, I evolved\nanother trick for partitioning the day.  I used to program from\ndinner till about 3 am every day, because at night no one could\ninterrupt me.  Then I'd sleep till about 11 am, and come in and\nwork until dinner on what I called \"business stuff.\"  I never thought\nof it in these terms, but in effect I had two workdays each day,\none on the manager's schedule and one on the maker's.\n\nWhen you're operating on the manager's schedule you can do something\nyou'd never want to do on the maker's: you can have speculative\nmeetings.  You can meet someone just to get to know one another.\nIf you have an empty slot in your schedule, why not?  Maybe it will\nturn out you can help one another in some way.\n\nBusiness people in Silicon Valley (and the whole world, for that\nmatter) have speculative meetings all the time.  They're effectively\nfree if you're on the manager's schedule.  They're so common that\nthere's distinctive language for proposing them: saying that you\nwant to \"grab coffee,\" for example.\n\nSpeculative meetings are terribly costly if you're on the maker's\nschedule, though.  Which puts us in something of a bind.  Everyone\nassumes that, like other investors, we run on the manager's schedule.\nSo they introduce us to someone they think we ought to meet, or\nsend us an email proposing we grab coffee.  At this point we have\ntwo options, neither of them good: we can meet with them, and lose\nhalf a day's work; or we can try to avoid meeting them, and probably\noffend them.\n\nTill recently we weren't clear in our own minds about the source\nof the problem.  We just took it for granted that we had to either\nblow our schedules or offend people.  But now that I've realized\nwhat's going on, perhaps there's a third option: to write something\nexplaining the two types of schedule.  Maybe eventually, if the\nconflict between the manager's schedule and the maker's schedule\nstarts to be more widely understood, it will become less of a\nproblem.\n\nThose of us on the maker's schedule are willing to compromise.   We\nknow we have to have some number of meetings.  All we ask from those\non the manager's schedule is that they understand the cost.\n\n\n\n\n\n\nThanks to Sam Altman, Trevor Blackwell, Paul Buchheit, Jessica Livingston,\nand Robert Morris for reading drafts of this.\n\n\n\nRelated:\n\nour own startupHow to Do What You Love\nGood and Bad Procrastination\nTurkish Translation\nFrench Translation\nKorean Translation\nGerman Translation\n\n\n",
  },
  {
    title: "A Local Revolution?",
    text: "April 2009\n\nRecently I realized I'd been holding two ideas in my head that would explode if combined.\n\nThe first is that startups may represent a new economic phase, on the scale of the Industrial Revolution. I'm not sure of this, but there seems a decent chance it's true.  People are dramatically more \nproductive as founders or early employees of startups—imagine how much less Larry and Sergey would have achieved if they'd gone to work for a big company—and that scale of improvement can change social customs.\n\nThe second idea is that startups are a type of business that flourishes in certain places that specialize in it—that Silicon Valley specializes in startups in the same way Los Angeles specializes in movies, or New York in finance. [1]\n\nWhat if both are true?  What if startups are both a new economic phase and also a type of business that only flourishes in certain centers?\n\nIf so, this revolution is going to be particularly revolutionary. All previous revolutions have spread.  Agriculture, cities, and industrialization all spread widely. If startups end up being like the movie business, with just a handful of centers and one dominant one, that's going to have novel consequences.\n\nThere are already signs that startups may not spread particularly well.  The spread of startups seems to be proceeding slower than the spread of the Industrial Revolution, despite the fact that communication is so much faster now.\n\nWithin a few decades of the founding of Boulton & Watt there were steam engines scattered over northern Europe and North America.  Industrialization didn't spread much beyond those regions for a while. It only spread to places where there was a strong middle class—countries where a private citizen could make a fortune without having it confiscated. Otherwise it wasn't worth investing in factories.  But in a country with a strong middle class it was easy for industrial techniques to take root.  An individual mine or factory owner could decide to install a steam engine, and within a few years he could probably find someone local to make him one.  So steam engines spread fast.  And they spread widely, because the locations of mines and factories were determined by features like rivers, harbors, and sources of raw materials. \n [2]\n\nStartups don't seem to spread so well, partly because they're more a social than a technical phenomenon, and partly because they're not tied to geography.  An individual European manufacturer could import industrial techniques and they'd work fine.  This doesn't seem to work so well with startups: you need a community of expertise, as you do in the movie business.  [3]\n Plus there aren't the same forces driving startups to spread.  Once railroads or electric power grids were invented, every region had to have them.  An area without railroads or power was a rich potential market.  But this isn't true with startups.  There's no need for a Microsoft of France or Google of Germany.\n\nGovernments may decide they want to encourage startups locally, but government policy can't call them into being the way a genuine need could.\n\nHow will this all play out?  If I had to predict now, I'd say that startups will spread, but very slowly, because their spread will be driven not by government policies (which won't work) or by market need (which doesn't exist) but, to the extent that it happens at all, by the same random factors that have caused startup culture to spread thus far.  And such random factors will increasingly be outweighed by the pull of existing startup hubs.\n\nSilicon Valley is where it is because William Shockley wanted to move back to Palo Alto, where he grew up, and the experts he lured west to work with him liked it so much they stayed.  Seattle owes much of its position as a tech center to the same cause: Gates and Allen wanted to move home.  Otherwise Albuquerque might have Seattle's place in the rankings.  Boston is a tech center because it's the intellectual capital of the US and probably the world.  And if Battery Ventures hadn't turned down Facebook, Boston would be significantly bigger now on the startup radar screen.\n\nBut of course it's not a coincidence that Facebook got funded in the Valley and not Boston.  There are more and bolder investors in Silicon Valley than in Boston, and even undergrads know it.\n\nBoston's case illustrates the difficulty you'd have establishing a new startup hub this late in the game.  If you wanted to create a startup hub by reproducing the way existing ones happened, the \nway to do it would be to establish a first-rate research university in a place so nice that rich people wanted to live there.  Then the town would be hospitable to both groups you need: both founders and investors.  That's the combination that yielded Silicon Valley.  But Silicon Valley didn't have Silicon Valley to compete with.  If you tried now to create a startup hub by planting a great university in a nice place, it would have a harder time getting started, because many of the best startups it produced would be sucked away to existing startup hubs.\n\nRecently I suggested a potential shortcut: \npay startups to move.  Once you had enough good startups in one place, it would create a self-sustaining chain reaction.  Founders would start to move there without being paid, because that was where their peers were, and investors would appear too, because that was where the deals were.\n\nIn practice I doubt any government would have the balls to try this, or the brains to do it right.  I didn't mean it as a practical suggestion, but more as an exploration of the lower bound of what it would take to create a startup hub deliberately.\n\nThe most likely scenario is (1) that no government will successfully establish a startup hub, and (2) that the spread of startup culture will thus be driven by the random factors that have driven it so far, but (3) that these factors will be increasingly outweighed by the pull of existing startup hubs.  Result: this revolution, if it is one, will be unusually localized.\n\n\n\n\n\n\nNotes\n\n[1]\nThere are two very different types of startup: one kind that evolves naturally, and one kind that's called into being to \"commercialize\" a scientific discovery.  Most computer/software startups are now the first type, and most pharmaceutical startups the second.  When I talk about startups in this essay, I mean type I startups.  There is no difficulty making type II startups spread: all you have to do is fund medical research labs; commercializing whatever new discoveries the boffins throw off is as straightforward as building a new airport.  Type II startups neither require nor produce startup culture. But that means having type II startups won't get you type I startups.  Philadelphia is a case in point: lots of type II startups, but hardly any type I.\n\nIncidentally, Google may appear to be an instance of a type II startup, but it wasn't.  Google is not pagerank commercialized.  They could have used another algorithm and everything would have turned out the same.  What made Google Google is that they cared about doing search well at a critical point in the evolution of the web.\n\n[2]\n Watt didn't invent the steam engine.  His critical invention was a refinement that made steam engines dramatically more efficient: the separate condenser.  But that oversimplifies his role.  He had such a different attitude to the problem and approached it with such energy that he transformed the field.  Perhaps the most accurate way to put it would be to say that Watt reinvented the steam engine.\n\n[3]\nThe biggest counterexample here is Skype.  If you're doing\nsomething that would get shut down in the US, it becomes an \nadvantage to be located elsewhere.  That's why Kazaa took\nthe place of Napster.  And the expertise and connections the \nfounders gained from running Kazaa helped ensure the success\nof Skype.\n\nThanks to Patrick Collison, Jessica Livingston, and Fred Wilson for reading drafts of this.\n\n[1]1[2]2[3]3123\n\n",
  },
  {
    title: "Why Twitter is a Big Deal",
    text: "April 2009\n\nOm Malik is the most recent of many people\nto ask why Twitter is such a big deal.\n\nThe reason is that it's a new messaging \nprotocol, where you don't specify the recipients.\nNew protocols are rare.  Or more precisely, new\nprotocols that take off are.\nThere are only a handful of commonly used ones: TCP/IP \n(the Internet), SMTP (email), HTTP (the web), and so on.  So any\nnew protocol is a big deal.  But Twitter is a protocol owned\nby a private company.  That's even rarer.\n\nCuriously, the fact that the founders of Twitter \nhave been slow to monetize it may in the long run\nprove to be an advantage.  Because they haven't tried\nto control it too much, Twitter feels to everyone like\nprevious protocols.  One forgets it's owned by a\nprivate company.  That must have made it easier for\nTwitter to spread.\n\n\n\n",
  },
  {
    title: "The Founder Visa",
    text: "\nApril 2009\n\nI usually avoid politics, but since we now seem to have an administration that's open to suggestions, I'm going to risk making one.  The single biggest thing the government could do to increase the number of startups in this country is a policy that would cost nothing: establish a new class of visa for startup founders.\n\nThe biggest constraint on the number of new startups that get created in the US is not tax policy or employment law or even Sarbanes-Oxley.  It's that we won't let the people who want to start them into the country.\n\nLetting just 10,000 startup founders into the country each year could have a visible effect on the economy.  If we assume 4 people per startup, which is probably an overestimate, that's 2500 new companies.  Each year.  They wouldn't all grow as big as Google, but out of 2500 some would come close.\n\nBy definition these 10,000 founders wouldn't be taking jobs from Americans: it could be part of the terms of the visa that they couldn't work for existing companies, only new ones they'd founded.  In fact they'd cause there to be \nmore jobs for Americans, because the companies they started would hire more employees as they grew.\n\nThe tricky part might seem to be how one defined a startup. But that could be solved quite easily: let the market decide.  Startup investors work hard to find the best startups.  The government could not do better than to piggyback on their expertise, and use investment by recognized startup investors as the test of whether a company was a real startup.\n\nHow would the government decide who's a startup investor?  The same way they decide what counts as a university for student visas. We'll establish our own accreditation procedure. We know who one another are.\n\n10,000 people is a drop in the bucket by immigration standards, but would represent a huge increase in the pool of startup founders.  I think this would have such a visible effect on the economy that it would make the legislator who introduced the bill famous.  The only way to know for sure would be to try it, and that would cost practically nothing.\n\n\n\n\n\n\nThanks to Trevor Blackwell, Paul Buchheit, Jeff Clavier, David Hornik, Jessica Livingston, Greg Mcadoo, Aydin Senkut, and Fred Wilson for reading drafts of this.\n\n\n\nRelated:\n\n\n\nThe United States of Entrepreneurs\n About Half of VC-Backed Company Founders are Immigrants\n\n\n\nThe United States of Entrepreneurs\n About Half of VC-Backed Company Founders are Immigrants\n\n\n",
  },
  {
    title: "Five Founders",
    text: "April 2009\n\nInc recently asked me who I thought were the 5 most\ninteresting startup founders of the last 30 years.  How do\nyou decide who's the most interesting?  The best test seemed\nto be influence: who are the 5\nwho've influenced me most?  Who do I use as examples when I'm\ntalking to companies we fund?  Who do I find myself quoting?\n\n1. Steve Jobs\n\nI'd guess Steve is the most influential founder not just for me but\nfor most people you could ask.  A lot of startup culture is Apple\nculture.  He was the original young founder.  And while the concept\nof \"insanely great\" already existed in the arts, it was a novel\nidea to introduce into a company in the 1980s.\n\nMore remarkable still, he's stayed interesting for 30 years.  People\nawait new Apple products the way they'd await new books by a popular\nnovelist.  Steve may not literally design them, but they wouldn't\nhappen if he weren't CEO.\n\nSteve is clever and driven, but so are a lot of people in the Valley.\nWhat makes him unique is his \nsense of \ndesign.  Before him, most\ncompanies treated design as a frivolous extra.  Apple's competitors\nnow know better.\n\n2. TJ Rodgers\n\nTJ Rodgers isn't as famous as Steve Jobs, but he may be the best\nwriter among Silicon Valley CEOs.  I've probably learned more from\nhim about the startup way of thinking than from anyone else.  Not\nso much from specific things he's written as by reconstructing the\nmind that produced them: brutally candid; aggressively garbage-collecting\noutdated ideas; and yet driven by pragmatism rather than ideology.\n\nThe first essay of his that I read was so electrifying that I\nremember exactly where I was at the time.  It was \nHigh\nTechnology Innovation: Free Markets or Government Subsidies? and\nI was downstairs in the Harvard Square T Station.  It felt as if\nsomeone had flipped on a light switch inside my head.\n\n3. Larry & Sergey\n\nI'm sorry to treat Larry and Sergey as one person.  I've always\nthought that was unfair to them.  But it does seem as if Google was a\ncollaboration.\n\nBefore Google, companies in Silicon Valley already knew it was\nimportant to have the best hackers.  So they claimed, at least.\nBut Google pushed this idea further than anyone had before.  Their\nhypothesis seems to have been that, in the initial stages at least,\nall you need is good hackers: if you hire all the smartest people\nand put them to work on a problem where their success can be measured,\nyou win.  All the other stuff—which includes all the stuff that\nbusiness schools think business consists of—you can figure out\nalong the way.  The results won't be perfect, but they'll be optimal.\nIf this was their hypothesis, it's now been verified experimentally.\n\n4. Paul Buchheit\n\nFew know this, but one person, Paul Buchheit, is responsible for\nthree of the best things Google has done.  He was the original\nauthor of GMail, which is the most impressive thing Google has after\nsearch.  He also wrote the first prototype of AdSense, and was the\nauthor of Google's mantra \"Don't be evil.\"\n\nPB made a point in a talk once that I now mention to every startup\nwe fund: that it's better, initially, to make a small number of\nusers really love you than a large number kind of like you.   If I\ncould tell startups only \nten sentences, \nthis would be one of them.\n\nNow he's cofounder of a startup called Friendfeed.  It's only a\nyear old, but already everyone in the Valley is watching them.\nSomeone responsible for three of the biggest ideas at Google is\ngoing to come up with more.\n\n5. Sam Altman\n\nI was told I shouldn't mention founders of YC-funded companies in\nthis list.   But Sam Altman can't be stopped by such flimsy rules.\nIf he wants to be on this list, he's going to be.\n\nHonestly, Sam is, along with Steve Jobs, the founder I refer to\nmost when I'm advising startups.  On questions of design, I ask\n\"What would Steve do?\" but on questions of strategy or ambition I\nask \"What would Sama do?\"\n\nWhat I learned from meeting Sama is that the doctrine of the elect\napplies to startups.  It applies way less than most people think:\nstartup investing does not consist of trying to pick winners the\nway you might in a horse race.  But there are a few people with\nsuch force of will that they're going to get whatever they want.\n\n\n\n",
  },
  {
    title: "Relentlessly Resourceful",
    text: "\n\nWant to start a startup?  Get funded by\nY Combinator.\n\n\n\n\n\nWant to start a startup?  Get funded by\nY Combinator.\n\nMarch 2009\n\nA couple days ago I finally got being a good startup founder down\nto two words:  relentlessly resourceful.\n\nTill then the best I'd managed was to get the opposite quality down\nto one: hapless.  Most dictionaries say hapless means unlucky.  But\nthe dictionaries are not doing a very good job.  A team that outplays\nits opponents but loses because of a bad decision by the referee\ncould be called unlucky, but not hapless.  Hapless implies passivity.\nTo be hapless is to be battered by circumstances — to let the world\nhave its way with you, instead of having your way with the world.\n\n[1]\n\nUnfortunately there's no antonym of hapless, which makes it difficult\nto tell founders what to aim for.  \"Don't be hapless\" is not much\nof a rallying cry.\n\nIt's not hard to express the quality we're looking for in metaphors.\nThe best is probably a running back.  A good running back is not\nmerely determined, but flexible as well.  They want to get downfield,\nbut they adapt their plans on the fly.\n\nUnfortunately this is just a metaphor, and not a useful one to most\npeople outside the US.   \"Be like a running back\" is no better than\n\"Don't be hapless.\"\n\nBut finally I've figured out how to express this quality directly.\nI was writing a talk for \ninvestors, and I had to explain what to\nlook for in founders.  What would someone who was the opposite of\nhapless be like?  They'd be relentlessly resourceful.  Not merely\nrelentless.  That's not enough to make things go your way except\nin a few mostly uninteresting domains.  In any interesting domain,\nthe difficulties will be novel.  Which means you can't simply plow\nthrough them, because you don't know initially how hard they are;\nyou don't know whether you're about to plow through a block of foam\nor granite.  So you have to be resourceful. You have to keep\ntrying new things.\n\nBe relentlessly resourceful.\n\nThat sounds right, but is it simply a description\nof how to be successful in general?  I don't think so.  This isn't\nthe recipe for success in writing or painting, for example.  In\nthat kind of work the recipe is more to be actively curious.\nResourceful implies the obstacles are external, which they generally\nare in startups. But in writing and painting they're mostly internal;\nthe obstacle is your own obtuseness.\n[2]\n\nThere probably are other fields where \"relentlessly resourceful\"\nis the recipe for success.  But though other fields may share it,\nI think this is the best short description we'll find of what makes\na good startup founder.  I doubt it could be made more precise.\n\nNow that we know what we're looking for, that leads to other\nquestions.  For example, can this quality be taught?  After four\nyears of trying to teach it to people, I'd say that yes, surprisingly\noften it can.  Not to everyone, but to many people. \n[3]\nSome\npeople are just constitutionally passive, but others have a latent\nability to be relentlessly resourceful that only needs to be brought\nout.\n\nThis is particularly true of young people who have till now always\nbeen under the thumb of some kind of authority.  Being relentlessly\nresourceful is definitely not the recipe for success in big companies,\nor in most schools.  I don't even want to think what the recipe is\nin big companies, but it is certainly longer and messier, involving\nsome combination of resourcefulness, obedience, and building\nalliances.\n\nIdentifying this quality also brings us closer to answering a\nquestion people often wonder about: how many startups there could\nbe.  There is not, as some people seem to think, any economic upper\nbound on this number.  There's no reason to believe there is any\nlimit on the amount of newly created wealth consumers can absorb,\nany more than there is a limit on the number of theorems that can\nbe proven.  So probably the limiting factor on the number of startups\nis the pool of potential founders.  Some people would make good\nfounders, and others wouldn't.  And now that we can say what makes\na good founder, we know how to put an upper bound on the size of\nthe pool.\n\nThis test is also useful to individuals.  If you want to know whether\nyou're the right sort of person to start a startup, ask yourself\nwhether you're relentlessly resourceful.  And if you want to know\nwhether to recruit someone as a cofounder, ask if they are.\n\nYou can even use it tactically.  If I were running a startup, this\nwould be the phrase I'd tape to the mirror.  \"Make something people\nwant\" is the destination, but \"Be relentlessly resourceful\" is how\nyou get there.\n\n\n\n\n\n\n\n\nNotes\n\n[1]\nI think the reason the dictionaries are wrong is that the\nmeaning of the word has shifted.  No one writing a dictionary from\nscratch today would say that hapless meant unlucky.  But a couple\nhundred years ago they might have.  People were more at the mercy\nof circumstances in the past, and as a result a lot of the words\nwe use for good and bad outcomes have origins in words about luck.\n\nWhen I was living in Italy, I was once trying to tell someone\nthat I hadn't had much success in doing something, but I couldn't\nthink of the Italian word for success.  I spent some time trying\nto describe the word I meant.  Finally she said \"Ah! Fortuna!\"\n\n[2]\nThere are aspects of startups where the recipe is to be\nactively curious.  There can be times when what you're doing is\nalmost pure discovery.  Unfortunately these times are a small\nproportion of the whole.  On the other hand, they are in research\ntoo.\n\n[3]\nI'd almost say to most people, but I realize (a) I have no\nidea what most people are like, and (b) I'm pathologically optimistic\nabout people's ability to change.\n\nThanks to Trevor Blackwell and Jessica Livingston for reading drafts\nof this.\n\n[1]1[2]2[3]3123\n\n",
  },
  {
    title: "How to Be an Angel Investor",
    text: "March 2009\n\n(This essay is derived from a talk at AngelConf.)\n\nWhen we sold our startup in 1998 I thought one day I'd do some angel\ninvesting.  Seven years later I still hadn't started.  I put it off\nbecause it seemed mysterious and complicated.   It turns out to be \neasier than I expected, and also more interesting.\n\nThe part I thought was hard, the mechanics of investing, really\nisn't. You give a startup money and they give you stock.  You'll\nprobably get either preferred stock, which means stock with extra\nrights like getting your money back first in a sale, or convertible\ndebt, which means (on paper) you're lending the company money, and\nthe debt converts to stock at the next sufficiently big funding\nround. \n[1]\n\nThere are sometimes minor tactical advantages to using one or the\nother.  The paperwork for convertible debt is simpler.  But really\nit doesn't matter much which you use.  Don't spend much time worrying\nabout the details of deal terms, especially when you first start\nangel investing.  That's not how you win at this game.  When you\nhear people talking about a successful angel investor, they're not\nsaying \"He got a 4x liquidation preference.\" They're saying \"He\ninvested in Google.\"\n\nThat's how you win: by investing in the right startups.  That is\nso much more important than anything else that I worry I'm misleading\nyou by even talking about other things.\n\nMechanics\n\nAngel investors often syndicate deals, which means they join together\nto invest on the same terms.  In a syndicate there is usually a\n\"lead\" investor who negotiates the terms with the startup.  But not\nalways: sometimes the startup cobbles together a syndicate of\ninvestors who approach them independently, and the startup's lawyer\nsupplies the paperwork.\n\nThe easiest way to get started in angel investing is to find a\nfriend who already does it, and try to get included in his syndicates.\nThen all you have to do is write checks.\n\nDon't feel like you have to join a syndicate, though.  It's not that\nhard to do it yourself.  You can just use the standard \nseries AA\ndocuments Wilson Sonsini and Y Combinator published online.\nYou should of course have your lawyer review everything.  Both you\nand the startup should have lawyers.  But the lawyers don't have\nto create the agreement from scratch.  \n[2]\n\n\nWhen you negotiate terms with a startup, there are two numbers you\ncare about: how much money you're putting in, and the valuation of\nthe company.  The valuation determines how much stock you get.  If\nyou put $50,000 into a company at a pre-money valuation of $1\nmillion, then the post-money valuation is $1.05 million, and you\nget .05/1.05, or 4.76% of the company's stock.\n\nIf the company raises more money later, the new investor will take\na chunk of the company away from all the existing shareholders just\nas you did.  If in the next round they sell 10% of the company to\na new investor, your 4.76% will be reduced to 4.28%.\n\nThat's ok.  Dilution is normal.  What saves you from being mistreated\nin future rounds, usually, is that you're in the same boat as the\nfounders.  They can't dilute you without diluting themselves just\nas much.  And they won't dilute themselves unless they end up \nnet ahead.  So in theory, each further \nround of investment leaves you\nwith a smaller share of an even more valuable company, till after\nseveral more rounds you end up with .5% of the company at the point\nwhere it IPOs, and you are very happy because your $50,000 has\nbecome $5 million. \n[3]\n\nThe agreement by which you invest should have provisions that \nlet you contribute to\nfuture rounds to maintain your percentage.  So it's your choice\nwhether you get diluted.  \n[4]\nIf the company does really well,\nyou eventually will, because eventually the valuations will get so\nhigh it's not worth it for you.\n\nHow much does an angel invest?  That varies enormously, from $10,000\nto hundreds of thousands or in rare cases even millions.  The upper\nbound is obviously the total amount the founders want to raise.\nThe lower bound is 5-10% of the total or $10,000, whichever\nis greater.  A typical angel round these days might be $150,000\nraised from 5 people.\n\nValuations don't vary as much.  For angel rounds it's rare to see\na valuation lower than half a million or higher than 4 or 5 million.\n4 million is starting to be VC territory.\n\nHow do you decide what valuation to offer?  If you're part of a\nround led by someone else, that problem is solved for you.  But\nwhat if you're investing by yourself?  There's no real answer.\nThere is no rational way to value an early stage startup.  The\nvaluation reflects nothing more than the strength of the company's\nbargaining position.  If they really want you, either because they\ndesperately need money, or you're someone who can help them a lot,\nthey'll let you invest at a low valuation.  If they don't need you,\nit will be higher.  So guess.  The startup may not have any more\nidea what the number should be than you do. \n[5]\n\nUltimately it doesn't matter much.  When angels make a lot of money\nfrom a deal, it's not because they invested at a valuation of $1.5\nmillion instead of $3 million.  It's because the company was really\nsuccessful.\n\nI can't emphasize that too much.  Don't get hung up on mechanics\nor deal terms.  What you should spend your time thinking about is\nwhether the company is good.\n\n(Similarly, founders also should not get hung up on deal\nterms, but should spend their time thinking about how to make the\ncompany good.)\n\nThere's a second less obvious component of an angel investment: how\nmuch you're expected to help the startup.  Like the amount you\ninvest, this can vary a lot.  You don't have to do anything if you\ndon't want to; you could simply be a source of money.  Or you can\nbecome a de facto employee of the company.  Just make sure that you\nand the startup agree in advance about roughly how much you'll do\nfor them.\n\nReally hot companies sometimes have high standards for angels.  The\nones everyone wants to invest in practically audition investors,\nand only take money from people who are famous and/or will work\nhard for them.  But don't feel like you have to put in a lot of\ntime or you won't get to invest in any good startups.  There is a\nsurprising lack of correlation between how hot a deal a startup is\nand how well it ends up doing.  Lots of hot startups will end up\nfailing, and lots of startups no one likes will end up succeeding.\nAnd the latter are so desperate for money that they'll take it from\nanyone at a low valuation. \n[6]\n\nPicking Winners\n\nIt would be nice to be able to pick those out, wouldn't it?  The\npart of angel investing that has most effect on your returns, picking\nthe right companies, is also the hardest.  So you should practically\nignore (or more precisely, archive, in the Gmail sense) everything\nI've told you so far.  You may need to refer to it at some point,\nbut it is not the central issue.\n\nThe central issue is picking the right startups.  What \"Make something\npeople want\" is for startups, \"Pick the right startups\" is for\ninvestors.  Combined they yield \"Pick the startups that will make\nsomething people want.\"\n\nHow do you do that?  It's not as simple as picking startups that\nare already making something wildly popular.  By then it's\ntoo late for angels.  VCs will already be onto them.  As an angel,\nyou have to pick startups before they've got a hit—either\nbecause they've made something great but users don't realize it\nyet, like Google early on, or because they're still an iteration\nor two away from the big hit, like Paypal when they were making\nsoftware for transferring money between PDAs.\n\nTo be a good angel investor, you have to be a good judge of potential.\nThat's what it comes down to.  VCs can be fast followers.  Most of\nthem don't try to predict what will win.  They just try to notice\nquickly when something already is winning.  But angels have to be\nable to predict.  \n[7]\n\nOne interesting consequence of this fact is that there are a lot\nof people out there who have never even made an angel investment\nand yet are already better angel investors than they realize.\nSomeone who doesn't know the first thing about the mechanics of\nventure funding but knows what a successful startup founder looks\nlike is actually far ahead of someone who knows termsheets inside\nout, but thinks \n\"hacker\" means someone who breaks into computers.\nIf you can recognize good startup founders by empathizing with\nthem—if you both resonate at the same frequency—then\nyou may already be a better startup picker than the median professional\nVC.  \n[8]\n\nPaul Buchheit, for example, started angel investing about a year\nafter me, and he was pretty much immediately as good as me at picking\nstartups.  My extra year of experience was rounding error compared\nto our ability to empathize with founders.\n\nWhat makes a good founder?  If there were a word that meant the\nopposite of hapless, that would be the one.  Bad founders seem\nhapless.  They may be smart, or not, but somehow events overwhelm\nthem and they get discouraged and give up.  Good founders make\nthings happen the way they want.  Which is not to say they force\nthings to happen in a predefined way.  Good founders have a healthy\nrespect for reality.  But they are relentlessly resourceful.  That's\nthe closest I can get to the opposite of hapless.  You want to fund\npeople who are relentlessly resourceful.\n\nNotice we started out talking about things, and now we're talking\nabout people.  There is an ongoing debate between investors which\nis more important, the people, or the idea—or more precisely,\nthe market. Some, like Ron Conway, say it's the people—that\nthe idea will change, but the people are the foundation of the\ncompany.  Whereas Marc Andreessen says he'd back ok founders in a\nhot market over great founders in a bad one.  \n[9]\n\nThese two positions are not so far apart as they seem, because good\npeople find good markets.  Bill Gates would probably have ended up\npretty rich even if IBM hadn't happened to drop the PC standard in\nhis lap.\n\nI've thought a lot about the disagreement between the investors who\nprefer to bet on people and those who prefer to bet on markets.\nIt's kind of surprising that it even exists.  You'd expect opinions\nto have converged more.\n\nBut I think I've figured out what's going on.  The three most\nprominent people I know who favor markets are Marc, Jawed Karim,\nand Joe Kraus.  And all three of them, in their own startups,\nbasically flew into a thermal: they hit a market growing so fast\nthat it was all they could do to keep up with it.  That kind of\nexperience is hard to ignore.  Plus I think they underestimate\nthemselves: they think back to how easy it felt to ride that huge\nthermal upward, and they think \"anyone could have done it.\"  But\nthat isn't true; they are not ordinary people.\n\nSo as an angel investor I think you want to go with Ron Conway and\nbet on people.  Thermals happen, yes, but no one can predict\nthem—not even the founders, and certainly not you as an\ninvestor.  And only good people can ride the thermals if they hit\nthem anyway.\n\nDeal Flow\n\nOf course the question of how to choose startups presumes you\nhave startups to choose between.  How do you find them?  This is\nyet another problem that gets solved for you by syndicates.  If you\ntag along on a friend's investments, you don't have to find startups.\n\nThe problem is not finding startups, exactly, but finding a stream\nof reasonably high quality ones.  The traditional way to do this\nis through contacts.  If you're friends with a lot of investors and\nfounders, they'll send deals your way.  The Valley basically runs\non referrals.  And once you start to become known as reliable,\nuseful investor, people will refer lots of deals to you.  I certainly\nwill.\n\nThere's also a newer way to find startups, which is to come to\nevents like Y Combinator's Demo Day, where a batch of newly created\nstartups presents to investors all at once.   We have two Demo Days\na year, one in March and one in August.  These are basically mass\nreferrals.\n\nBut events like Demo Day only account for a fraction of matches\nbetween startups and investors.  The personal referral is still the\nmost common route.  So if you want to hear about new startups, the\nbest way to do it is to get lots of referrals.\n\nThe best way to get lots of referrals is to invest in startups.  No\nmatter how smart and nice you seem, insiders will be reluctant to\nsend you referrals until you've proven yourself by doing a couple\ninvestments.  Some smart, nice guys turn out to be flaky,\nhigh-maintenance investors. But once you prove yourself as a good\ninvestor, the deal flow, as they call it, will increase rapidly in\nboth quality and quantity.  At the extreme, for someone like Ron\nConway, it is basically identical with the deal flow of the whole\nValley.\n\nSo if you want to invest seriously, the way to get started is to\nbootstrap yourself off your existing connections, be a good investor\nin the startups you meet that way, and eventually you'll start a\nchain reaction.  Good investors are rare, even in Silicon Valley.\nThere probably aren't more than a couple hundred serious angels in the whole\nValley, and yet they're probably the single most important ingredient\nin making the Valley what it is.  Angels are the limiting reagent\nin startup formation.\n\nIf there are only a couple hundred serious angels in the Valley, \nthen by deciding to become one you could single-handedly make the pipeline\nfor startups in Silicon Valley significantly wider.  That is kind\nof mind-blowing.\n\nBeing Good\n\nHow do you be a good angel investor?  The first thing you need is\nto be decisive.  When we talk to founders about good and bad\ninvestors, one of the ways we describe the good ones is to say \"he\nwrites checks.\" That doesn't mean the investor says yes to everyone.\nFar from it.  It means he makes up his mind quickly,\nand follows through.  You may be thinking, how hard could that be?\nYou'll see when you try it.  It follows from the nature of angel\ninvesting that the decisions are hard.  You have to guess early,\nat the stage when the most promising ideas still seem counterintuitive,\nbecause if they were obviously good, VCs would already have funded\nthem.\n\nSuppose it's 1998.  You come across a startup founded by a couple\ngrad students.  They say they're going to work on Internet search.\nThere are already a bunch of big public companies doing search.\nHow can these grad students possibly compete with them?  And does\nsearch even matter anyway?  All the search engines are trying to\nget people to start calling them \"portals\" instead.  Why would you\nwant to invest in a startup run by a couple of nobodies who are\ntrying to compete with large, aggressive companies in an area they\nthemselves have declared passe?  And yet the grad students seem\npretty smart.  What do you do?\n\nThere's a hack for being decisive when you're inexperienced: ratchet\ndown the size of your investment till it's an amount you wouldn't\ncare too much about losing.  For every rich person (you probably\nshouldn't try angel investing unless you think of yourself as rich)\nthere's some amount that would be painless, though annoying, to\nlose.  Till you feel comfortable investing, don't invest more than\nthat per startup.\n\nFor example, if you have $5 million in investable assets, it would\nprobably be painless (though annoying) to lose $15,000.  That's\nless than .3% of your net worth.  So start by making 3 or 4 $15,000\ninvestments.  Nothing will teach you about angel investing like\nexperience.  Treat the first few as an educational expense.  $60,000\nis less than a lot of graduate programs.  Plus you get equity.\n\nWhat's really uncool is to be strategically indecisive: to string\nfounders along while trying to gather more information about the\nstartup's trajectory. \n[10]\n There's always a temptation to do that,\nbecause you just have so little to go on, but you have to consciously\nresist it.  In the long term it's to your advantage to be good.\n\nThe other component of being a good angel investor is simply to be\na good person.  Angel investing is not a business where you make\nmoney by screwing people over.  Startups create wealth, and\ncreating wealth is not a zero sum game.  No one has to lose for you\nto win.  In fact, if you mistreat the founders you invest in, they'll\njust get demoralized and the company will do worse.  Plus your\nreferrals will dry up.  So I recommend being good.\n\nThe most successful angel investors I know are all basically good\npeople.  Once they invest in a company, all they want to do is help\nit.  And they'll help people they haven't invested in too.  When\nthey do favors they don't seem to keep track of them.  It's too\nmuch overhead.  They just try to help everyone, and assume good\nthings will flow back to them somehow. Empirically that seems to\nwork.\n\n\n\n\n\n\n\n\nNotes\n\n[1]\nConvertible debt can be either capped at a particular valuation,\nor can be done at a discount to whatever the valuation turns out\nto be when it converts.  E.g. convertible debt at a discount of 30%\nmeans when it converts you get stock as if you'd invested at a 30%\nlower valuation.  That can be useful in cases where you can't or\ndon't want to figure out what the valuation should be.  You leave\nit to the next investor.  On the other hand, a lot of investors\nwant to know exactly what they're getting, so they will only do\nconvertible debt with a cap.\n\n[2]\nThe expensive part of creating an agreement from scratch is\nnot writing the agreement, but bickering at several hundred\ndollars an hour over the details.  That's why the series AA paperwork\naims at a middle ground.  You can just start from the compromise\nyou'd have reached after lots of back and forth.\n\nWhen you fund a startup, both your lawyers should be specialists\nin startups.  Do not use ordinary corporate lawyers for this.  Their\ninexperience makes them overbuild: they'll create huge, overcomplicated\nagreements, and spend hours arguing over irrelevant things.\n\nIn the Valley, the top startup law firms are Wilson Sonsini, Orrick,\nFenwick & West, Gunderson Dettmer, and Cooley Godward.  In Boston\nthe best are Goodwin Procter, Wilmer Hale, and Foley Hoag.\n\n[3]\nYour mileage may vary.\n\n[4]\nThese anti-dilution provisions also protect you against\ntricks like a later investor trying to steal the company by doing\nanother round that values the company at $1.  If you have a competent\nstartup lawyer handle the deal for you, you should be protected\nagainst such tricks initially.  But it could become a problem later.\nIf a big VC firm wants to invest in the startup after you, they may\ntry to make you take out your anti-dilution protections.  And if\nthey do the startup will be pressuring you to agree.  They'll tell\nyou that if you don't, you're going to kill their deal with the VC.\nI recommend you solve this problem by having a gentlemen's agreement\nwith the founders: agree with them in advance that you're not going\nto give up your anti-dilution protections.  Then it's up to them\nto tell VCs early on.\n\nThe reason you don't want to give them up is the following scenario.\nThe VCs recapitalize the company, meaning they give it additional\nfunding at a pre-money valuation of zero.  This wipes out the\nexisting shareholders, including both you and the founders.  They\nthen grant the founders lots of options, because they need them to\nstay around, but you get nothing.\n\nObviously this is not a nice thing to do.  It doesn't happen often.\nBrand-name VCs wouldn't recapitalize a company just to steal a few\npercent from an angel.  But there's a continuum here.  A less\nupstanding, lower-tier VC might be tempted to do it to steal a big\nchunk of stock.\n\nI'm not saying you should always absolutely refuse to give up your\nanti-dilution protections.  Everything is a negotiation.  If you're\npart of a powerful syndicate, you might be able to give up legal\nprotections and rely on social ones.  If you invest in a deal led\nby a big angel like Ron Conway, for example, you're pretty well\nprotected against being mistreated, because any VC would think twice\nbefore crossing him.  This kind of protection is one of the reasons\nangels like to invest in syndicates.\n\n[5]\nDon't invest so much, or at such a low valuation, that you\nend up with an excessively large share of a startup, unless you're\nsure your money will be the last they ever need.  Later stage\ninvestors won't invest in a company if the founders don't have\nenough equity left to motivate them.  I talked to a VC recently who\nsaid he'd met with a company he really liked, but he turned\nthem down because investors already owned more than half of it.\nThose investors probably thought they'd been pretty clever by getting\nsuch a large chunk of this desirable company, but in fact they were\nshooting themselves in the foot.\n\n[6]\nAt any given time I know of at least 3 or 4 YC alumni who I\nbelieve will be big successes but who are running on vapor,\nfinancially, because investors don't yet get what they're doing.\n(And no, unfortunately, I can't tell you who they are.  I can't\nrefer a startup to an investor I don't know.)\n\n[7]\nThere are some VCs who can predict instead of reacting.  Not\nsurprisingly, these are the most successful ones.\n\n[8]\nIt's somewhat sneaky of me to put it this way, because the\nmedian VC loses money.  That's one of the most surprising things\nI've learned about VC while working on Y Combinator.  Only a fraction\nof VCs even have positive returns.  The rest exist to satisfy demand\namong fund managers for venture capital as an asset class.  Learning\nthis explained a lot about some of the VCs I encountered when we\nwere working on Viaweb.\n\n[9]\nVCs also generally say they prefer great markets to great\npeople.  But what they're really saying is they want both.  They're\nso selective that they only even consider great people.  So when\nthey say they care above all about big markets, they mean that's\nhow they choose between great people.\n\n[10]\nFounders rightly dislike the sort of investor who says he's\ninterested in investing but doesn't want to lead.  There are\ncircumstances where this is an acceptable excuse, but more often\nthan not what it means is \"No, but if you turn out to be a hot deal,\nI want to be able to claim retroactively I said yes.\"\n\nIf you like a startup enough to invest in it, then invest in it.\nJust use the standard series \nAA terms and write them a check.\n\n\nThanks to Sam Altman, Paul Buchheit, Jessica Livingston,\nRobert Morris, and Fred Wilson for reading drafts of this.\n\n\nComment on this essay.\n\n[1]1[2]2[3]3[4]4[5]5[6]6[7]7[8]8[9]9[10]1012345678910\n\n",
  },
];
